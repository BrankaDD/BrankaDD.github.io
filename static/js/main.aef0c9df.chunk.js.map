{"version":3,"sources":["Messages.js","TextMsg.js","App.js","index.js"],"names":["Messages","_this","this","messages","props","react_default","a","createElement","index_es","className","map","m","renderChat","message","member","text","currentMember","id","key","uuidv4","style","backgroundColor","clientData","color","username","React","Component","TextMsg","state","e","setState","target","value","preventDefault","onSendMessage","_this2","onSubmit","onChange","type","placeholder","autoFocus","randomName","adjectives","nouns","Math","floor","random","length","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toString","drone","publish","room","window","Scaledrone","data","on","error","console","objectSpread","clientId","subscribe","push","Messages_Messages","TextMsg_TextMsg","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.aef0c9df.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nimport React from \"react\";\r\nimport ReactScrollableFeed from 'react-scrollable-feed'\r\n\r\nexport default class Messages extends React.Component {\r\n  render() {\r\n    const {messages} = this.props;\r\n    return (\r\n      <ReactScrollableFeed className=\"Messages-list\">\r\n      <ul>\r\n        {messages.map(m => this.renderChat(m))}\r\n      </ul>\r\n      </ReactScrollableFeed>\r\n    );\r\n  }\r\n   \r\n  renderChat(message) {\r\n    const {member, text} = message;\r\n    const {currentMember} = this.props;\r\n    const messageFromMe = member.id === currentMember.id;\r\n    const className = messageFromMe ?\r\n      \"Messages-message currentMember\" : \"Messages-message\";\r\n    return (\r\n      <li className={className} key={uuidv4()}>\r\n      <span\r\n        className=\"avatar\"\r\n        style={{backgroundColor: member.clientData.color}}\r\n      />\r\n        <div className=\"Message-content\">\r\n          <div className=\"username\">\r\n            {member.clientData.username}\r\n          </div>\r\n          <div className=\"text\">{text}</div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default class TextMsg extends React.Component {\r\n  state = {\r\n    text: \"\",\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ text: \"\" });\r\n    this.props.onSendMessage(this.state.text);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Input\">\r\n        <form onSubmit={(e) => this.onSubmit(e)}>\r\n          <input\r\n            onChange={(e) => this.onChange(e)}\r\n            value={this.state.text}\r\n            type=\"text\"\r\n            placeholder=\"Write your message here and press ENTER\"\r\n            autoFocus={true}\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Messages from \"./Messages\";\nimport TextMsg from \"./TextMsg\";\n \nfunction randomName() {\n  const adjectives = [\n    \"Autumn\", \"Hidden\", \"Bitter\", \"Misty\", \"Silent\", \"Empty\", \"Dry\", \"Dark\",\n    \"Dummer\", \"Icy\", \"Delicate\", \"Quiet\", \"White\", \"Cool\", \"Spring\", \"Winter\",\n    \"Patient\", \"Twilight\", \"Dawn\", \"Crimson\", \"Wispy\", \"Weathered\", \"Blue\",\n    \"Billowing\", \"Broken\", \"Cold\", \"Damp\", \"Falling\", \"Frosty\", \"Green\", \"Long\",\n    \"Late\", \"Lingering\", \"Bold\", \"Little\", \"Morning\", \"Muddy\", \"Old\", \"Red\",\n    \"Rough\", \"Still\", \"Small\", \"Sparkling\", \"Throbbing\", \"Shy\", \"Wandering\",\n    \"Withered\", \"Wild\", \"Black\", \"Young\", \"Holy\", \"Solitary\", \"Fragrant\",\n    \"Aged\", \"Snowy\", \"Proud\", \"Floral\", \"Restless\", \"Divine\", \"Polished\",\n    \"Ancient\", \"Purple\", \"Lively\", \"Nameless\", \"Drunken\"\n  ];\n  const nouns = [\n    \"Waterfall\", \"River\", \"Breeze\", \"Moon\", \"Rain\", \"Wind\", \"Sea\", \"Morning\",\n    \"Snow\", \"Lake\", \"Sunset\", \"Pine\", \"Shadow\", \"Leaf\", \"Dawn\", \"Glitter\",\n    \"Forest\", \"Hill\", \"Cloud\", \"Meadow\", \"Sun\", \"Glade\", \"Bird\", \"Brook\",\n    \"Butterfly\", \"Bush\", \"Dew\", \"Dust\", \"Field\", \"Fire\", \"Flower\", \"Firefly\",\n    \"Feather\", \"Grass\", \"Haze\", \"Mountain\", \"Night\", \"Pond\", \"Darkness\",\n    \"Snowflake\", \"Silence\", \"Sound\", \"Sky\", \"Shape\", \"Surf\", \"Thunder\",\n    \"Violet\", \"Water\", \"Wildflower\", \"Wave\", \"Resonance\", \"Sun\",\n    \"Wood\", \"Dream\", \"Cherry\", \"Tree\", \"Fog\", \"Frost\", \"Voice\", \"Paper\", \"Frog\",\n    \"Smoke\", \"Star\", \"Dog\"\n  ];\n  const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n  const noun = nouns[Math.floor(Math.random() * nouns.length)];\n  return adjective + noun;\n}\n\nfunction randomColor() {\n  return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}\nexport default class App extends React.Component {\n  state = {\n    messages: [],\n    member: {\n      username: randomName(),\n      color: randomColor(),\n    },\n  }\n  constructor() {\n    super();\n    this.drone = new window.Scaledrone(\"39Gy4yOsUwJ6q7xV\", {\n      data: this.state.member\n    });\n    this.drone.on('open', error => {\n      if (error) {\n        return console.error(error);\n      }\n      const member = {...this.state.member};\n      member.id = this.drone.clientId;\n      this.setState({member});\n    });\n    const room = this.drone.subscribe(\"observable-room\");\n    room.on('data', (data, member) => {\n      const messages = this.state.messages;\n      messages.push({member, text: data});\n      this.setState({messages});\n    });\n  }\n     render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1>Purple and pink chat app</h1>\n        </div>\n        <Messages\n          messages={this.state.messages}\n          currentMember={this.state.member}\n        />\n        <TextMsg\n          onSendMessage={this.onSendMessage}  \n        />\n      </div>\n    );\n  }\n  onSendMessage = (message) => {\n    this.drone.publish({\n      room: \"observable-room\",\n      message\n    });\n  }\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}